<?xml version="1.0" encoding="utf-8"?><api:response xmlns:api="http://www.symplectic.co.uk/publications/api"><api:version uri="https://mypublications.shef.ac.uk/" elements-version="6.17.0.4095" schema-version="6.13" product-name="myPublications"/><api:request href="https://mypublications.shef.ac.uk:8091/secure-api/v6.13/publications/1556961"/><api:result><api:object category="publication" id="1556961" last-affected-when="2024-02-14T11:24:47.487+00:00" last-modified-when="2024-02-14T11:24:47.487+00:00" href="https://mypublications.shef.ac.uk:8091/secure-api/v6.13/publications/1556961" created-when="2023-09-03T12:45:52.017+01:00" type-id="4" type-display-name="Conference proceedings paper" type="conference"><api:privacy-level>Public</api:privacy-level><api:privacy-level-locked>false</api:privacy-level-locked><api:ever-approved>true</api:ever-approved><api:reporting-date-1>2022-07-11</api:reporting-date-1><api:allow-type-switching>true</api:allow-type-switching><api:records><api:record format="native" id="4366271" source-id="28" source-name="eprints" source-display-name="White Rose Research Online" id-at-source="204340" last-modified-when="2023-10-18T16:55:41.763+01:00"><api:native><api:field name="abstract" type="text" display-name="Abstract"><api:text>A natural model of read-once linear branching programs is a branching program where queries are F2 linear forms, and along each path, the queries are linearly independent. We consider two restrictions of this model, which we call weakly and strongly read-once, both generalizing standard read-once branching programs and parity decision trees. Our main results are as follows. Average-case complexity. We define a pseudo-random class of functions which we call directional affine extractors, and show that these functions are hard on average for the strongly read-once model. We then present an explicit construction of such function with good parameters. This strengthens the result of Cohen and Shinkar (ITCS’16) who gave such average-case hardness for parity decision trees. Directional affine extractors are stronger than the more familiar class of affine extractors. Given the significance of these functions, we expect that our new class of functions might be of independent interest. Proof complexity. We also consider the proof system Res[⊕], which is an extension of resolution with linear queries, and define the regular variant of Res[⊕]. A refutation of a CNF in this proof system naturally defines a linear branching program solving the corresponding search problem. If a refutation is regular, we prove that the resulting program is read-once. Conversely, we show that a weakly read-once linear BP solving the search problem can be converted to a regular Res[⊕] refutation with constant blow up, where the regularity condition comes from the definition of weakly read-once BPs, thus obtaining the equivalence between these proof systems.</api:text></api:field><api:field name="authors" type="person-list" display-name="Authors"><api:people><api:person><api:last-name>Gryaznov</api:last-name><api:initials>S</api:initials><api:first-names>S</api:first-names><api:separate-first-names><api:first-name>S</api:first-name></api:separate-first-names></api:person><api:person><api:last-name>Pudlák</api:last-name><api:initials>P</api:initials><api:first-names>P</api:first-names><api:separate-first-names><api:first-name>P</api:first-name></api:separate-first-names></api:person><api:person><api:links><api:link type="elements/user" id="36810" href="https://mypublications.shef.ac.uk:8091/secure-api/v6.13/users/36810"/></api:links><api:last-name>Talebanfard</api:last-name><api:initials>N</api:initials><api:first-names>N</api:first-names><api:separate-first-names><api:first-name>N</api:first-name></api:separate-first-names></api:person></api:people></api:field><api:field name="c-data-accessibility" type="text" display-name="Data Accessibility"><api:text>DataN</api:text></api:field><api:field name="c-data-availability-statement" type="boolean" display-name="Data Availability Statement"><api:boolean>false</api:boolean></api:field><api:field name="c-goldoa" type="boolean" display-name="Gold Open Access?"><api:boolean>true</api:boolean></api:field><api:field name="c-licence-statement" type="boolean" display-name="Licence statement?"><api:boolean>false</api:boolean></api:field><api:field name="c-ref-no-issn" type="boolean" display-name="REF No ISSN"><api:boolean>false</api:boolean></api:field><api:field name="c-rights-retention-opt-out" type="boolean" display-name="Rights retention opt out"><api:boolean>false</api:boolean></api:field><api:field name="doi" type="text" display-name="DOI"><api:text>10.4230/LIPIcs.CCC.2022.4</api:text><api:links><api:link type="doi" href="http://doi.org/10.4230/LIPIcs.CCC.2022.4"/><api:link type="altmetric" href="http://www.altmetric.com/details.php?doi=10.4230/LIPIcs.CCC.2022.4"/></api:links></api:field><api:field name="editors" type="person-list" display-name="Editors"><api:people><api:person><api:last-name>Lovett</api:last-name><api:initials>S</api:initials><api:first-names>S</api:first-names><api:separate-first-names><api:first-name>S</api:first-name></api:separate-first-names></api:person></api:people></api:field><api:field name="isbn-13" type="text" display-name="ISBN-13"><api:text>9783959772419</api:text></api:field><api:field name="issn" type="text" display-name="ISSN"><api:text>1868-8969</api:text><api:links><api:link type="elements/journal" href="https://mypublications.shef.ac.uk:8091/secure-api/v6.13/journals/959900"/></api:links></api:field><api:field name="journal" type="text" display-name="Title of published proceedings"><api:text>37th Computational Complexity Conference (CCC 2022)</api:text></api:field><api:field name="location" type="text" display-name="Conference place"><api:text>Philadelphia, Pennsylvania, USA</api:text></api:field><api:field name="name-of-conference" type="text" display-name="Name of conference"><api:text>37th Computational Complexity Conference (CCC 2022)</api:text></api:field><api:field name="notes" type="text" display-name="Other information"><api:text>© 2022 Svyatoslav Gryaznov, Pavel Pudlák, and Navid Talebanfard. Licensed under Creative Commons License CC-BY 4.0 (https://creativecommons.org/licenses/by/4.0/)</api:text></api:field><api:field name="pagination" type="pagination" display-name="Pagination"><api:pagination><api:begin-page>4:1</api:begin-page><api:end-page>4:16</api:end-page></api:pagination></api:field><api:field name="publication-date" type="date" display-name="Publication date"><api:date><api:day>11</api:day><api:month>7</api:month><api:year>2022</api:year></api:date></api:field><api:field name="publication-status" type="text" display-name="Status"><api:text>Published</api:text></api:field><api:field name="public-url" type="text" display-name="Public URL"><api:text>https://eprints.whiterose.ac.uk/id/eprint/204340</api:text></api:field><api:field name="publisher" type="text" display-name="Publisher"><api:text>Schloss Dagstuhl - Leibniz-Zentrum für Informatik</api:text></api:field><api:field name="publisher-licence" type="text" display-name="Publisher licence"><api:text>CC BY</api:text></api:field><api:field name="record-created-at-source-date" type="date" display-name="Record created at source"><api:date><api:day>17</api:day><api:month>10</api:month><api:year>2023</api:year></api:date></api:field><api:field name="record-made-public-at-source-date" type="date" display-name="Record made publicly available"><api:date><api:day>18</api:day><api:month>10</api:month><api:year>2023</api:year></api:date></api:field><api:field name="repository-status" type="text" display-name="Availability"><api:text>Public</api:text></api:field><api:field name="title" type="text" display-name="Title"><api:text>Linear branching programs and directional affine extractors</api:text></api:field><api:field name="volume" type="text" display-name="Volume"><api:text>234</api:text></api:field><api:files><api:file proprietary-id="https://eprints.whiterose.ac.uk/id/file/6710493"><api:filename>LIPIcs-CCC-2022-4.pdf</api:filename><api:file-url>https://eprints.whiterose.ac.uk/204340/1/LIPIcs-CCC-2022-4.pdf</api:file-url><api:extension>pdf</api:extension><api:file-size>813898</api:file-size><api:mime-type>application/pdf</api:mime-type><api:checksum algorithm="md5">4EDF4BD73AB89E2AE5C83FD9EFC23781</api:checksum><api:file-version>Published version</api:file-version></api:file></api:files></api:native></api:record><api:record format="native" id="4347316" source-id="7" source-name="scopus" source-display-name="Scopus" id-at-source="2-s2.0-85134412637" last-modified-when="2024-02-04T12:50:03.54+00:00"><api:citation-count>2</api:citation-count><api:native><api:field name="abstract" type="text" display-name="Abstract"><api:text>A natural model of read-once linear branching programs is a branching program where queries are F2 linear forms, and along each path, the queries are linearly independent. We consider two restrictions of this model, which we call weakly and strongly read-once, both generalizing standard read-once branching programs and parity decision trees. Our main results are as follows. Average-case complexity. We define a pseudo-random class of functions which we call directional affine extractors, and show that these functions are hard on average for the strongly read-once model. We then present an explicit construction of such function with good parameters. This strengthens the result of Cohen and Shinkar (ITCS’16) who gave such average-case hardness for parity decision trees. Directional affine extractors are stronger than the more familiar class of affine extractors. Given the significance of these functions, we expect that our new class of functions might be of independent interest. Proof complexity. We also consider the proof system Res[⊕], which is an extension of resolution with linear queries, and define the regular variant of Res[⊕]. A refutation of a CNF in this proof system naturally defines a linear branching program solving the corresponding search problem. If a refutation is regular, we prove that the resulting program is read-once. Conversely, we show that a weakly read-once linear BP solving the search problem can be converted to a regular Res[⊕] refutation with constant blow up, where the regularity condition comes from the definition of weakly read-once BPs, thus obtaining the equivalence between these proof systems.</api:text></api:field><api:field name="authors" type="person-list" display-name="Authors"><api:people><api:person><api:last-name>Gryaznov</api:last-name><api:initials>S</api:initials><api:first-names>S</api:first-names><api:separate-first-names><api:first-name>S</api:first-name></api:separate-first-names><api:addresses><api:address iso-country-code="CZ"><api:line type="organisation">Academy of Sciences of the Czech Republic</api:line><api:line type="city">Prague</api:line><api:line type="country">Czech Republic</api:line></api:address></api:addresses><api:identifiers><api:identifier scheme="scopus-author-id">57190048055</api:identifier></api:identifiers></api:person><api:person><api:last-name>Pudlák</api:last-name><api:initials>P</api:initials><api:first-names>P</api:first-names><api:separate-first-names><api:first-name>P</api:first-name></api:separate-first-names><api:addresses><api:address iso-country-code="CZ"><api:line type="organisation">Academy of Sciences of the Czech Republic</api:line><api:line type="city">Prague</api:line><api:line type="country">Czech Republic</api:line></api:address></api:addresses><api:identifiers><api:identifier scheme="scopus-author-id">7006534228</api:identifier></api:identifiers></api:person><api:person><api:links><api:link type="elements/user" id="36810" href="https://mypublications.shef.ac.uk:8091/secure-api/v6.13/users/36810"/></api:links><api:last-name>Talebanfard</api:last-name><api:initials>N</api:initials><api:first-names>N</api:first-names><api:separate-first-names><api:first-name>N</api:first-name></api:separate-first-names><api:addresses><api:address iso-country-code="CZ"><api:line type="organisation">Academy of Sciences of the Czech Republic</api:line><api:line type="city">Prague</api:line><api:line type="country">Czech Republic</api:line></api:address></api:addresses><api:identifiers><api:identifier scheme="scopus-author-id">23391047300</api:identifier></api:identifiers></api:person></api:people></api:field><api:field name="doi" type="text" display-name="DOI"><api:text>10.4230/LIPIcs.CCC.2022.4</api:text><api:links><api:link type="doi" href="http://doi.org/10.4230/LIPIcs.CCC.2022.4"/><api:link type="altmetric" href="http://www.altmetric.com/details.php?doi=10.4230/LIPIcs.CCC.2022.4"/></api:links></api:field><api:field name="isbn-13" type="text" display-name="ISBN-13"><api:text>9783959772419</api:text></api:field><api:field name="issn" type="text" display-name="ISSN"><api:text>1868-8969</api:text><api:links><api:link type="elements/journal" href="https://mypublications.shef.ac.uk:8091/secure-api/v6.13/journals/959900"/></api:links></api:field><api:field name="journal" type="text" display-name="Title of published proceedings"><api:text>Leibniz International Proceedings in Informatics, LIPIcs</api:text></api:field><api:field name="publication-date" type="date" display-name="Publication date"><api:date><api:day>1</api:day><api:month>7</api:month><api:year>2022</api:year></api:date></api:field><api:field name="publication-status" type="text" display-name="Status"><api:text>Published</api:text></api:field><api:field name="title" type="text" display-name="Title"><api:text>Linear Branching Programs and Directional Affine Extractors</api:text></api:field><api:field name="volume" type="text" display-name="Volume"><api:text>234</api:text></api:field></api:native></api:record><api:record format="native" id="4532972" source-id="6" source-name="dblp" source-display-name="DBLP" id-at-source="journals/corr/abs-2201-10997" last-modified-when="2024-02-14T11:24:47.487+00:00"><api:native><api:field name="authors" type="person-list" display-name="Authors"><api:people><api:person><api:last-name>Gryaznov</api:last-name><api:initials>S</api:initials><api:first-names>Svyatoslav</api:first-names><api:separate-first-names><api:first-name>Svyatoslav</api:first-name></api:separate-first-names></api:person><api:person><api:last-name>Pudlák</api:last-name><api:initials>P</api:initials><api:first-names>Pavel</api:first-names><api:separate-first-names><api:first-name>Pavel</api:first-name></api:separate-first-names></api:person><api:person><api:links><api:link type="elements/user" id="36810" href="https://mypublications.shef.ac.uk:8091/secure-api/v6.13/users/36810"/></api:links><api:last-name>Talebanfard</api:last-name><api:initials>N</api:initials><api:first-names>Navid</api:first-names><api:separate-first-names><api:first-name>Navid</api:first-name></api:separate-first-names></api:person></api:people></api:field><api:field name="journal" type="text" display-name="Title of published proceedings"><api:text>CoRR</api:text></api:field><api:field name="publication-date" type="date" display-name="Publication date"><api:date><api:year>2022</api:year></api:date></api:field><api:field name="title" type="text" display-name="Title"><api:text>Linear Branching Programs and Directional Affine Extractors.</api:text></api:field><api:field name="volume" type="text" display-name="Volume"><api:text>abs/2201.10997</api:text></api:field></api:native></api:record></api:records><api:fields/><api:all-labels type="keyword-list"><api:keywords><api:keyword scheme="for-2020" origin="issn-inferred">46 Information and computing sciences</api:keyword></api:keywords></api:all-labels><api:journal issn="1868-8969" href="https://mypublications.shef.ac.uk:8091/secure-api/v6.13/journals/959900" title="Leibniz International Proceedings in Informatics"><api:records><api:record source-name="summary"><api:title>Leibniz International Proceedings in Informatics</api:title></api:record></api:records></api:journal><api:relationships href="https://mypublications.shef.ac.uk:8091/secure-api/v6.13/publications/1556961/relationships"/><api:oa><api:oa-policy-exception-policy-id>1</api:oa-policy-exception-policy-id><api:oa-policy-exception-type>Deposit6</api:oa-policy-exception-type><api:oa-policy-exceptions><api:oa-policy-exception><api:policy-id>1</api:policy-id><api:type>Deposit6</api:type></api:oa-policy-exception><api:oa-policy-exception><api:policy-id>57</api:policy-id><api:type>Deposit6</api:type></api:oa-policy-exception><api:oa-policy-exception><api:policy-id>61</api:policy-id><api:type>Deposit6</api:type></api:oa-policy-exception><api:oa-policy-exception><api:policy-id>62</api:policy-id><api:type>Deposit6</api:type></api:oa-policy-exception><api:oa-policy-exception><api:policy-id>63</api:policy-id><api:type>Deposit6</api:type></api:oa-policy-exception><api:oa-policy-exception><api:policy-id>64</api:policy-id><api:type>Deposit6</api:type></api:oa-policy-exception><api:oa-policy-exception><api:policy-id>67</api:policy-id><api:type>Deposit6</api:type></api:oa-policy-exception></api:oa-policy-exceptions></api:oa></api:object></api:result></api:response>